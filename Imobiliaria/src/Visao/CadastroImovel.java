/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;
//aaa
import Componentes.Componentes;
import Controlador.CarregaEndereco;
import Controlador.ControladorPessoa;
import Controlador.Mensagens;
import Modelo.*;
import Util.VerificaNumeros;
import com.sun.xml.internal.ws.api.streaming.XMLStreamReaderFactory;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Bruno
 */
public class CadastroImovel extends javax.swing.JDialog {

    SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
    Mensagens m;
    Componentes c = new Componentes();
    JButton botaoGravar;
    JButton botaoExcluir;
    JButton botaoBuscar;
    CarregaEndereco carregaEndereco = new CarregaEndereco();
    ControladorPessoa controladorPessoa;
    Pessoa p = new Pessoa();
    Telefone t = new Telefone();

    /**
     * Creates new form CadastroPessoal
     */
    public CadastroImovel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        botaoGravar = c.criaBotaoGravar();
        botaoExcluir = c.criaBotaoExcluir();
        botaoBuscar = c.criaBotaoBuscar();


        botaoGravar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGravarActionPerformed(evt);
            }
        });

        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        botaoBuscar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarActionPerformed(evt);
            }
        });


        jtfBuscar.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                acaoBuscar();
            }
        });

        jpControles.add(botaoGravar);
        jpControles.add(botaoExcluir);
        jpControles.add(botaoBuscar);

        jcbPais.setModel(carregaEndereco.carregaPais());
        jcbPais.setSelectedIndex(0);

        jcbEstado.setModel(carregaEndereco.carregaEstado((Pais) jcbPais.getSelectedItem()));
        jcbEstado.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgBuscaPessoa = new javax.swing.ButtonGroup();
        jtpAbas = new javax.swing.JTabbedPane();
        jpPessoal = new javax.swing.JPanel();
        jspPainelRolagem = new javax.swing.JScrollPane();
        jpAgrupadorDImvl = new javax.swing.JPanel();
        jpCadastro = new javax.swing.JPanel();
        jtfBuscar = new javax.swing.JTextField();
        jlBuscar = new javax.swing.JLabel();
        jlCadastro = new javax.swing.JLabel();
        jlCadastroNmr = new javax.swing.JLabel();
        jpDadosProprietario = new javax.swing.JPanel();
        jpLabelsDP = new javax.swing.JPanel();
        jlNome = new javax.swing.JLabel();
        jlRG = new javax.swing.JLabel();
        jlCPF_CNPJ = new javax.swing.JLabel();
        jpTextFieldsDP = new javax.swing.JPanel();
        jtfNome = new javax.swing.JTextField();
        jtfRG = new javax.swing.JTextField();
        jtfCPF_CNPJ = new javax.swing.JTextField();
        jpBuscarPessoa = new javax.swing.JPanel();
        jrbNome = new javax.swing.JRadioButton();
        jrbCPF_CNPJ = new javax.swing.JRadioButton();
        jrbRG = new javax.swing.JRadioButton();
        jbBuscar = new javax.swing.JButton();
        jpEnderecoImovel = new javax.swing.JPanel();
        jpLabelsE = new javax.swing.JPanel();
        jlPais = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jlCidade = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlLogradouro = new javax.swing.JLabel();
        jlNumero = new javax.swing.JLabel();
        jlCEP_ZIP = new javax.swing.JLabel();
        jlComplemento = new javax.swing.JLabel();
        jpTextFieldsE = new javax.swing.JPanel();
        jcbPais = new javax.swing.JComboBox();
        jcbEstado = new javax.swing.JComboBox();
        jcbCidade = new javax.swing.JComboBox();
        jcbBairro = new javax.swing.JComboBox();
        jcbLogradouro = new javax.swing.JComboBox();
        jtfNumero = new javax.swing.JTextField();
        jcbCEP_ZIP = new javax.swing.JComboBox();
        jtfComplemento = new javax.swing.JTextField();
        jpControles = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jpDadosFuncionario = new javax.swing.JPanel();
        jpAgrupadorPImvl = new javax.swing.JPanel();
        jpDadosProprietario1 = new javax.swing.JPanel();
        jpLabelsDP1 = new javax.swing.JPanel();
        jlBuscarProp1 = new javax.swing.JLabel();
        jlNome1 = new javax.swing.JLabel();
        jlRG1 = new javax.swing.JLabel();
        jlCPF_CNPJ1 = new javax.swing.JLabel();
        jpTextFieldsDP1 = new javax.swing.JPanel();
        jtfBuscarProp1 = new javax.swing.JTextField();
        jtfNome1 = new javax.swing.JTextField();
        jtfRG1 = new javax.swing.JTextField();
        jtfCPF_CNPJ1 = new javax.swing.JTextField();
        jpEnderecoImovel1 = new javax.swing.JPanel();
        jpLabelsE1 = new javax.swing.JPanel();
        jlPais1 = new javax.swing.JLabel();
        jlEstado1 = new javax.swing.JLabel();
        jlCidade1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlLogradouro1 = new javax.swing.JLabel();
        jlNumero1 = new javax.swing.JLabel();
        jlCEP_ZIP1 = new javax.swing.JLabel();
        jlComplemento1 = new javax.swing.JLabel();
        jpTextFieldsE1 = new javax.swing.JPanel();
        jcbPais1 = new javax.swing.JComboBox();
        jcbEstado1 = new javax.swing.JComboBox();
        jcbCidade1 = new javax.swing.JComboBox();
        jcbBairro1 = new javax.swing.JComboBox();
        jcbLogradouro1 = new javax.swing.JComboBox();
        jtfNumero1 = new javax.swing.JTextField();
        jcbCEP_ZIP1 = new javax.swing.JComboBox();
        jtfComplemento1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtpAbas.setPreferredSize(new java.awt.Dimension(400, 600));

        jspPainelRolagem.setBorder(null);

        jlBuscar.setText("Buscar:");

        jlCadastro.setText("Cadastro:");

        javax.swing.GroupLayout jpCadastroLayout = new javax.swing.GroupLayout(jpCadastro);
        jpCadastro.setLayout(jpCadastroLayout);
        jpCadastroLayout.setHorizontalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlCadastroNmr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 533, Short.MAX_VALUE)
                .addComponent(jlBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpCadastroLayout.setVerticalGroup(
            jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlBuscar)
                    .addComponent(jlCadastro)
                    .addComponent(jlCadastroNmr))
                .addContainerGap())
        );

        jpDadosProprietario.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Propriet√°rio"));

        jpLabelsDP.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jlNome.setText("Nome:");
        jpLabelsDP.add(jlNome);

        jlRG.setText("RG:");
        jpLabelsDP.add(jlRG);

        jlCPF_CNPJ.setText("CPF/CNPJ:");
        jpLabelsDP.add(jlCPF_CNPJ);

        jpTextFieldsDP.setLayout(new java.awt.GridLayout(3, 1, 0, 8));
        jpTextFieldsDP.add(jtfNome);
        jpTextFieldsDP.add(jtfRG);
        jpTextFieldsDP.add(jtfCPF_CNPJ);

        jpBuscarPessoa.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Propriet√°rio"));

        btgBuscaPessoa.add(jrbNome);
        jrbNome.setText("Nome");

        btgBuscaPessoa.add(jrbCPF_CNPJ);
        jrbCPF_CNPJ.setText("CFP/CNPJ");

        btgBuscaPessoa.add(jrbRG);
        jrbRG.setText("RG");

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBuscarPessoaLayout = new javax.swing.GroupLayout(jpBuscarPessoa);
        jpBuscarPessoa.setLayout(jpBuscarPessoaLayout);
        jpBuscarPessoaLayout.setHorizontalGroup(
            jpBuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarPessoaLayout.createSequentialGroup()
                .addGroup(jpBuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBuscarPessoaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jrbNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbCPF_CNPJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbRG))
                    .addComponent(jbBuscar))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jpBuscarPessoaLayout.setVerticalGroup(
            jpBuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBuscarPessoaLayout.createSequentialGroup()
                .addGroup(jpBuscarPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbNome)
                    .addComponent(jrbCPF_CNPJ)
                    .addComponent(jrbRG))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscar))
        );

        javax.swing.GroupLayout jpDadosProprietarioLayout = new javax.swing.GroupLayout(jpDadosProprietario);
        jpDadosProprietario.setLayout(jpDadosProprietarioLayout);
        jpDadosProprietarioLayout.setHorizontalGroup(
            jpDadosProprietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosProprietarioLayout.createSequentialGroup()
                .addComponent(jpLabelsDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpTextFieldsDP, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBuscarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpDadosProprietarioLayout.setVerticalGroup(
            jpDadosProprietarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpTextFieldsDP, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jpLabelsDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBuscarPessoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jpEnderecoImovel.setBorder(javax.swing.BorderFactory.createTitledBorder("Endere√ßo do Im√≥vel"));
        jpEnderecoImovel.setToolTipText("O endere√ßo do im√≥vel √© preenchido automaticamente com os dados do propriet√°rio do im√≥vel.");

        jpLabelsE.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jlPais.setText("Pa√≠s:");
        jpLabelsE.add(jlPais);

        jlEstado.setText("Estado:");
        jpLabelsE.add(jlEstado);

        jlCidade.setText("Cidade:");
        jpLabelsE.add(jlCidade);

        jLabel1.setText("Bairro:");
        jpLabelsE.add(jLabel1);

        jlLogradouro.setText("Logradouro:");
        jpLabelsE.add(jlLogradouro);

        jlNumero.setText("N√∫mero:");
        jpLabelsE.add(jlNumero);

        jlCEP_ZIP.setText("CEP/ZIP:");
        jpLabelsE.add(jlCEP_ZIP);

        jlComplemento.setText("Complemento:");
        jpLabelsE.add(jlComplemento);

        jpTextFieldsE.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jcbPais.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPaisItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbPais);

        jcbEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbEstadoItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbEstado);

        jcbCidade.setEnabled(false);
        jcbCidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCidadeItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbCidade);

        jcbBairro.setEnabled(false);
        jcbBairro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBairroItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbBairro);

        jcbLogradouro.setEnabled(false);
        jcbLogradouro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLogradouroItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbLogradouro);
        jpTextFieldsE.add(jtfNumero);

        jcbCEP_ZIP.setEnabled(false);
        jcbCEP_ZIP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCEP_ZIPItemStateChanged(evt);
            }
        });
        jpTextFieldsE.add(jcbCEP_ZIP);
        jpTextFieldsE.add(jtfComplemento);

        javax.swing.GroupLayout jpEnderecoImovelLayout = new javax.swing.GroupLayout(jpEnderecoImovel);
        jpEnderecoImovel.setLayout(jpEnderecoImovelLayout);
        jpEnderecoImovelLayout.setHorizontalGroup(
            jpEnderecoImovelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEnderecoImovelLayout.createSequentialGroup()
                .addComponent(jpLabelsE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTextFieldsE, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpEnderecoImovelLayout.setVerticalGroup(
            jpEnderecoImovelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpLabelsE, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
            .addComponent(jpTextFieldsE, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpAgrupadorDImvlLayout = new javax.swing.GroupLayout(jpAgrupadorDImvl);
        jpAgrupadorDImvl.setLayout(jpAgrupadorDImvlLayout);
        jpAgrupadorDImvlLayout.setHorizontalGroup(
            jpAgrupadorDImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgrupadorDImvlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAgrupadorDImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpAgrupadorDImvlLayout.createSequentialGroup()
                        .addGroup(jpAgrupadorDImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jpEnderecoImovel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jpDadosProprietario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpAgrupadorDImvlLayout.setVerticalGroup(
            jpAgrupadorDImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgrupadorDImvlLayout.createSequentialGroup()
                .addComponent(jpCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpDadosProprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jpEnderecoImovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        jspPainelRolagem.setViewportView(jpAgrupadorDImvl);

        jpControles.setLayout(new javax.swing.BoxLayout(jpControles, javax.swing.BoxLayout.LINE_AXIS));
        jpControles.add(filler1);
        jpControles.add(filler2);
        jpControles.add(filler3);
        jpControles.add(filler4);
        jpControles.add(filler5);

        javax.swing.GroupLayout jpPessoalLayout = new javax.swing.GroupLayout(jpPessoal);
        jpPessoal.setLayout(jpPessoalLayout);
        jpPessoalLayout.setHorizontalGroup(
            jpPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspPainelRolagem, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
            .addGroup(jpPessoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpPessoalLayout.setVerticalGroup(
            jpPessoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPessoalLayout.createSequentialGroup()
                .addComponent(jspPainelRolagem, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jpControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jtpAbas.addTab("Dados do Im√≥vel", jpPessoal);

        jpDadosProprietario1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Propriet√°rio"));

        jpLabelsDP1.setLayout(new java.awt.GridLayout(4, 1, 0, 5));

        jlBuscarProp1.setText("Tamanho:");
        jpLabelsDP1.add(jlBuscarProp1);

        jlNome1.setText("Nome:");
        jpLabelsDP1.add(jlNome1);

        jlRG1.setText("RG:");
        jpLabelsDP1.add(jlRG1);

        jlCPF_CNPJ1.setText("CPF/CNPJ:");
        jpLabelsDP1.add(jlCPF_CNPJ1);

        jpTextFieldsDP1.setLayout(new java.awt.GridLayout(4, 1, 0, 5));
        jpTextFieldsDP1.add(jtfBuscarProp1);
        jpTextFieldsDP1.add(jtfNome1);
        jpTextFieldsDP1.add(jtfRG1);
        jpTextFieldsDP1.add(jtfCPF_CNPJ1);

        javax.swing.GroupLayout jpDadosProprietario1Layout = new javax.swing.GroupLayout(jpDadosProprietario1);
        jpDadosProprietario1.setLayout(jpDadosProprietario1Layout);
        jpDadosProprietario1Layout.setHorizontalGroup(
            jpDadosProprietario1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDadosProprietario1Layout.createSequentialGroup()
                .addComponent(jpLabelsDP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpTextFieldsDP1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpDadosProprietario1Layout.setVerticalGroup(
            jpDadosProprietario1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpLabelsDP1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
            .addComponent(jpTextFieldsDP1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jpEnderecoImovel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Endere√ßo do Im√≥vel"));
        jpEnderecoImovel1.setToolTipText("O endere√ßo do im√≥vel √© preenchido automaticamente com os dados do propriet√°rio do im√≥vel.");

        jpLabelsE1.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jlPais1.setText("Pa√≠s:");
        jpLabelsE1.add(jlPais1);

        jlEstado1.setText("Estado:");
        jpLabelsE1.add(jlEstado1);

        jlCidade1.setText("Cidade:");
        jpLabelsE1.add(jlCidade1);

        jLabel2.setText("Bairro:");
        jpLabelsE1.add(jLabel2);

        jlLogradouro1.setText("Logradouro:");
        jpLabelsE1.add(jlLogradouro1);

        jlNumero1.setText("N√∫mero:");
        jpLabelsE1.add(jlNumero1);

        jlCEP_ZIP1.setText("CEP/ZIP:");
        jpLabelsE1.add(jlCEP_ZIP1);

        jlComplemento1.setText("Complemento:");
        jpLabelsE1.add(jlComplemento1);

        jpTextFieldsE1.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jcbPais1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPais1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbPais1);

        jcbEstado1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbEstado1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbEstado1);

        jcbCidade1.setEnabled(false);
        jcbCidade1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCidade1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbCidade1);

        jcbBairro1.setEnabled(false);
        jcbBairro1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbBairro1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbBairro1);

        jcbLogradouro1.setEnabled(false);
        jcbLogradouro1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLogradouro1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbLogradouro1);
        jpTextFieldsE1.add(jtfNumero1);

        jcbCEP_ZIP1.setEnabled(false);
        jcbCEP_ZIP1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCEP_ZIP1ItemStateChanged(evt);
            }
        });
        jpTextFieldsE1.add(jcbCEP_ZIP1);
        jpTextFieldsE1.add(jtfComplemento1);

        javax.swing.GroupLayout jpEnderecoImovel1Layout = new javax.swing.GroupLayout(jpEnderecoImovel1);
        jpEnderecoImovel1.setLayout(jpEnderecoImovel1Layout);
        jpEnderecoImovel1Layout.setHorizontalGroup(
            jpEnderecoImovel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEnderecoImovel1Layout.createSequentialGroup()
                .addComponent(jpLabelsE1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTextFieldsE1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );
        jpEnderecoImovel1Layout.setVerticalGroup(
            jpEnderecoImovel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpLabelsE1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
            .addComponent(jpTextFieldsE1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpAgrupadorPImvlLayout = new javax.swing.GroupLayout(jpAgrupadorPImvl);
        jpAgrupadorPImvl.setLayout(jpAgrupadorPImvlLayout);
        jpAgrupadorPImvlLayout.setHorizontalGroup(
            jpAgrupadorPImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgrupadorPImvlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAgrupadorPImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpEnderecoImovel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDadosProprietario1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpAgrupadorPImvlLayout.setVerticalGroup(
            jpAgrupadorPImvlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgrupadorPImvlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpDadosProprietario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jpEnderecoImovel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpDadosFuncionarioLayout = new javax.swing.GroupLayout(jpDadosFuncionario);
        jpDadosFuncionario.setLayout(jpDadosFuncionarioLayout);
        jpDadosFuncionarioLayout.setHorizontalGroup(
            jpDadosFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 694, Short.MAX_VALUE)
            .addGroup(jpDadosFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpDadosFuncionarioLayout.createSequentialGroup()
                    .addGap(0, 2, Short.MAX_VALUE)
                    .addComponent(jpAgrupadorPImvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );
        jpDadosFuncionarioLayout.setVerticalGroup(
            jpDadosFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 625, Short.MAX_VALUE)
            .addGroup(jpDadosFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpDadosFuncionarioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpAgrupadorPImvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jtpAbas.addTab("Propridades do Im√≥vel", jpDadosFuncionario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpAbas, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpAbas, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
        );

        jtpAbas.getAccessibleContext().setAccessibleName("Dados Principais");
        jtpAbas.getAccessibleContext().setAccessibleDescription("Dados Principais");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbPaisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPaisItemStateChanged
    }//GEN-LAST:event_jcbPaisItemStateChanged

    private void jcbCidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCidadeItemStateChanged
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            jcbBairro.setEnabled(true);
            jcbBairro.setModel(carregaEndereco.carregaBairro((Cidade) jcbCidade.getSelectedItem()));
        }
    }//GEN-LAST:event_jcbCidadeItemStateChanged

    private void jcbLogradouroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLogradouroItemStateChanged
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            jcbCEP_ZIP.setEnabled(true);
            jcbCEP_ZIP.setModel(carregaEndereco.carregaCEP_ZIP((Bairro) jcbBairro.getSelectedItem()));
        }
    }//GEN-LAST:event_jcbLogradouroItemStateChanged

    private void jcbCEP_ZIPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCEP_ZIPItemStateChanged
    }//GEN-LAST:event_jcbCEP_ZIPItemStateChanged

    private void jcbEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbEstadoItemStateChanged
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            jcbCidade.setEnabled(true);
            jcbCidade.setModel(carregaEndereco.carregaCidade((Estado) jcbEstado.getSelectedItem()));
        }
    }//GEN-LAST:event_jcbEstadoItemStateChanged

    private void jcbBairroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBairroItemStateChanged
        if (evt.getStateChange() == ItemEvent.DESELECTED) {
            jcbLogradouro.setEnabled(true);
            jcbLogradouro.setModel(carregaEndereco.carregaEndereco((Bairro) jcbBairro.getSelectedItem()));
        }
    }//GEN-LAST:event_jcbBairroItemStateChanged

    private void jcbPais1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPais1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPais1ItemStateChanged

    private void jcbEstado1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbEstado1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEstado1ItemStateChanged

    private void jcbCidade1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCidade1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCidade1ItemStateChanged

    private void jcbBairro1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbBairro1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbBairro1ItemStateChanged

    private void jcbLogradouro1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLogradouro1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbLogradouro1ItemStateChanged

    private void jcbCEP_ZIP1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCEP_ZIP1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCEP_ZIP1ItemStateChanged

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        
    }//GEN-LAST:event_jbBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    private void botaoGravarActionPerformed(java.awt.event.ActionEvent evt) {
        acaoGravar();
    }

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {
        if (p.getNome() != null) {
            controladorPessoa = new ControladorPessoa();
            controladorPessoa.removePessoa(p);
        } else {
            m = new Mensagens();
            m.jopAlerta("√â necess√°rio buscar um cadastro antes de excluir.");
        }
    }

    private void botaoBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        acaoBuscar();
    }

    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CadastroImovel dialog = new CadastroImovel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgBuscaPessoa;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JComboBox jcbBairro;
    private javax.swing.JComboBox jcbBairro1;
    private javax.swing.JComboBox jcbCEP_ZIP;
    private javax.swing.JComboBox jcbCEP_ZIP1;
    private javax.swing.JComboBox jcbCidade;
    private javax.swing.JComboBox jcbCidade1;
    private javax.swing.JComboBox jcbEstado;
    private javax.swing.JComboBox jcbEstado1;
    private javax.swing.JComboBox jcbLogradouro;
    private javax.swing.JComboBox jcbLogradouro1;
    private javax.swing.JComboBox jcbPais;
    private javax.swing.JComboBox jcbPais1;
    private javax.swing.JLabel jlBuscar;
    private javax.swing.JLabel jlBuscarProp1;
    private javax.swing.JLabel jlCEP_ZIP;
    private javax.swing.JLabel jlCEP_ZIP1;
    private javax.swing.JLabel jlCPF_CNPJ;
    private javax.swing.JLabel jlCPF_CNPJ1;
    private javax.swing.JLabel jlCadastro;
    private javax.swing.JLabel jlCadastroNmr;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlCidade1;
    private javax.swing.JLabel jlComplemento;
    private javax.swing.JLabel jlComplemento1;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlEstado1;
    private javax.swing.JLabel jlLogradouro;
    private javax.swing.JLabel jlLogradouro1;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlNome1;
    private javax.swing.JLabel jlNumero;
    private javax.swing.JLabel jlNumero1;
    private javax.swing.JLabel jlPais;
    private javax.swing.JLabel jlPais1;
    private javax.swing.JLabel jlRG;
    private javax.swing.JLabel jlRG1;
    private javax.swing.JPanel jpAgrupadorDImvl;
    private javax.swing.JPanel jpAgrupadorPImvl;
    private javax.swing.JPanel jpBuscarPessoa;
    private javax.swing.JPanel jpCadastro;
    private javax.swing.JPanel jpControles;
    private javax.swing.JPanel jpDadosFuncionario;
    private javax.swing.JPanel jpDadosProprietario;
    private javax.swing.JPanel jpDadosProprietario1;
    private javax.swing.JPanel jpEnderecoImovel;
    private javax.swing.JPanel jpEnderecoImovel1;
    private javax.swing.JPanel jpLabelsDP;
    private javax.swing.JPanel jpLabelsDP1;
    private javax.swing.JPanel jpLabelsE;
    private javax.swing.JPanel jpLabelsE1;
    private javax.swing.JPanel jpPessoal;
    private javax.swing.JPanel jpTextFieldsDP;
    private javax.swing.JPanel jpTextFieldsDP1;
    private javax.swing.JPanel jpTextFieldsE;
    private javax.swing.JPanel jpTextFieldsE1;
    private javax.swing.JRadioButton jrbCPF_CNPJ;
    private javax.swing.JRadioButton jrbNome;
    private javax.swing.JRadioButton jrbRG;
    private javax.swing.JScrollPane jspPainelRolagem;
    private javax.swing.JTextField jtfBuscar;
    private javax.swing.JTextField jtfBuscarProp1;
    private javax.swing.JTextField jtfCPF_CNPJ;
    private javax.swing.JTextField jtfCPF_CNPJ1;
    private javax.swing.JTextField jtfComplemento;
    private javax.swing.JTextField jtfComplemento1;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNome1;
    private javax.swing.JTextField jtfNumero;
    private javax.swing.JTextField jtfNumero1;
    private javax.swing.JTextField jtfRG;
    private javax.swing.JTextField jtfRG1;
    private javax.swing.JTabbedPane jtpAbas;
    // End of variables declaration//GEN-END:variables

    public boolean validaCampos() {

        if (jtfNome.getText().equals("")) {
            m = new Mensagens();
            m.jopAlerta("Por favor preencha o campo 'Nome'.");
            return false;

        } else {


            this.p.setNome(jtfNome.getText());

            if (jtfRG.getText().equals("")) {
                m = new Mensagens();
                m.jopAlerta("Por favor preencha o campo 'RG'.");
                return false;

            } else {
                if (VerificaNumeros.verificaNumeros(jtfRG.getText())) {
                    this.p.setRG(Integer.parseInt(jtfRG.getText()));
                } else {
                    Mensagens m = new Mensagens();
                    m.jopAlerta("Informe apenas n√∫meros no campo 'RG'.");
                }
                if (jtfCPF_CNPJ.getText().equals("")) {
                    m = new Mensagens();
                    m.jopAlerta("Por favor preencha o campo 'CPF/CNPJ'.");
                    return false;

                } else {
                    if (VerificaNumeros.verificaNumeros(jtfCPF_CNPJ.getText())) {
                        this.p.setCPF_CNPJ(Integer.parseInt(jtfCPF_CNPJ.getText()));
                    } else {
                        Mensagens m = new Mensagens();
                        m.jopAlerta("Informe apenas n√∫meros no campo 'CPF/CNPJ'.");
                    }
                    if (!jcbCidade.isEnabled()) {
                        return false;

                    } else if (!jcbBairro.isEnabled()) {
                        return false;

                    } else {
                        Pais pais = new Pais();
                        Estado estado = new Estado();
                        Cidade cidade = new Cidade();
                        Bairro bairro = new Bairro();

                        pais = (Pais) jcbPais.getSelectedItem();
                        estado = (Estado) jcbEstado.getSelectedItem();
                        cidade = (Cidade) jcbCidade.getSelectedItem();
                        bairro = (Bairro) jcbBairro.getSelectedItem();

                        if (!jcbLogradouro.isEnabled()) {
                            return false;

                        } else {
                            Endereco endereco = new Endereco();
                            endereco = (Endereco) jcbLogradouro.getSelectedItem();

                            if (jtfNumero.getText().equals("")) {
                                m = new Mensagens();
                                m.jopAlerta("Por favor preencha o campo 'N√∫mero'.");
                                return false;

                            } else {
                                if (VerificaNumeros.verificaNumeros(jtfNumero.getText())) {
                                    this.p.setNumero(Integer.parseInt(jtfNumero.getText()));
                                } else {
                                    Mensagens m = new Mensagens();
                                    m.jopAlerta("Informe apenas n√∫meros no campo 'N√∫mero'.");
                                }

                                if (!jcbCEP_ZIP.isEnabled()) {
                                    return false;

                                } else {

                                    CEP_ZIP cep_zip = new CEP_ZIP();

                                    cep_zip = (CEP_ZIP) jcbCEP_ZIP.getSelectedItem();

                                    if (jtfComplemento.getText().equals("")) {
                                        m = new Mensagens();
                                        m.jopAlerta("Por favor preencha o campo 'Complemento'.");
                                        return false;
                                    } else {
                                        this.p.setComplemento(jtfComplemento.getText());
                                        this.p.setIdPais(pais.getCodigo());
                                        this.p.setIdEstado(estado.getId());
                                        this.p.setIdCidade(cidade.getCodigo());
                                        this.p.setIdBairro(bairro.getIdBairro());
                                        this.p.setIdLogradouro(endereco.getIdBairro());
                                        this.p.setCEP_ZIP(cep_zip.getCep_zip());

                                    }
                                    Mensagens m = new Mensagens();
                                    m.jopAlerta("Informe apenas n√∫meros no campo 'Telefone'.");
                                }

                                return true;
                            }
                        }
                    }
                }
            }
        }
    }

    public void acaoBuscar() {
        if (!jtfBuscar.getText().equals("")) {
            controladorPessoa = new ControladorPessoa();
            p.setIdPessoa(Integer.parseInt(jtfBuscar.getText()));
            p = controladorPessoa.buscaPessoa(p);

            jtfNome.setText(p.getNome());
            jtfCPF_CNPJ.setText(p.getCPF_CNPJ() + "");
            jtfRG.setText(p.getRG() + "");
            jtfNumero.setText(p.getNumero() + "");
            jtfComplemento.setText(p.getComplemento());

            Pais pais = new Pais("", "", p.getIdPais());
            Estado estado = new Estado("", "", 0, p.getIdEstado());
            Cidade cidade = new Cidade("", 0, p.getIdCidade());
            Bairro bairro = new Bairro(p.getIdBairro(), 0, "", "");
            Bairro bairroCEP = new Bairro(p.getIdBairro(), 0, "", "");
            Endereco endereco = new Endereco(0, p.getIdBairro(), "", 0, 0, "");

            jcbPais.removeAll();
            jcbEstado.removeAll();
            jcbCidade.removeAll();
            jcbBairro.removeAll();
            jcbLogradouro.removeAll();
            jcbCEP_ZIP.removeAll();

            jcbPais.setModel(carregaEndereco.carregaPais());
            jcbEstado.setModel(carregaEndereco.carregaEstado((Pais) jcbPais.getSelectedItem()));
            jcbCidade.setModel(carregaEndereco.carregaCidade(estado));
            jcbBairro.setModel(carregaEndereco.carregaBairro(cidade));
            jcbLogradouro.setModel(carregaEndereco.carregaEndereco(bairro));
            jcbCEP_ZIP.setModel(carregaEndereco.carregaCEP_ZIP(bairroCEP));

            pais.setCodigo(p.getIdPais());

            jcbPais.setSelectedItem(pais);
            jcbEstado.setSelectedItem(estado);
            jcbCidade.setSelectedItem(cidade);
            jcbBairro.setSelectedItem(bairro);
            jcbCEP_ZIP.setSelectedItem(bairroCEP);
            jcbLogradouro.setSelectedItem(endereco);

            jcbCidade.setEnabled(true);
            jcbBairro.setEnabled(true);
            jcbLogradouro.setEnabled(true);
            jcbCEP_ZIP.setEnabled(true);

            jcbPais.updateUI();
            jcbEstado.updateUI();
            jcbCidade.updateUI();
            jcbBairro.updateUI();
            jcbLogradouro.updateUI();
            jcbCEP_ZIP.updateUI();

        } else {
            m = new Mensagens();
            m.jopAlerta("√â necess√°rio informar o c√≥digo de um cadastro antes de pesquisar.");
        }
    }

    public void acaoGravar() {
        if (validaCampos()) {
            controladorPessoa = new ControladorPessoa();

            boolean inserePessoa = controladorPessoa.inserePessoa(p, t);

            if (inserePessoa) {
                Mensagens m = new Mensagens();
                m.jopAviso("Cadastro realizado com sucesso!");
            }

            jtfBuscar.setText("");
            jtfNome.setText("");
            jtfRG.setText("");
            jtfCPF_CNPJ.setText("");
            jtfNumero.setText("");
            jtfComplemento.setText("");

            jcbPais.setSelectedIndex(0);
            jcbEstado.setSelectedIndex(0);
            jcbCidade.setSelectedIndex(0);
            jcbBairro.setSelectedIndex(0);
            jcbLogradouro.setSelectedIndex(0);
            jcbCEP_ZIP.setSelectedIndex(0);

            jcbCidade.setEnabled(false);
            jcbBairro.setEnabled(false);
            jcbLogradouro.setEnabled(false);
            jcbCEP_ZIP.setEnabled(false);
        }
    }

    public void acaoAlterar() {
        if (validaCampos()) {
        }

    }

    public DefaultComboBoxModel acaoBuscarPessoa(){
        
        if (jrbNome.isSelected()){
            if ("".equals(jtfNome.getText())){
                m.jopAlerta("Foi selecionada a op√ß√£o de busca por 'Nome' por√©m o campo 'Nome' est√° vazio");
                return null;
            }else{
                p.setNome(jtfNome.getText());
                p = controladorPessoa.buscaPessoa(p);
                return new DefaultComboBoxModel();
            }
        } 
        return new DefaultComboBoxModel();
    }
    
}
