/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controlador.Conexao;
import Modelo.Config;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Bruno
 */
public class dConexaoTela extends javax.swing.JDialog {

    /**
     * Creates new form dConexaoTela
     */
    public dConexaoTela(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    Config c = new Config();
    Conexao con = new Conexao();
    int teste = 0;                           //variável para teste de conexão  | 1=OK  | 2=falha | 0=Nenhum teste realizado

    public Config preencheConf() {
        if (jtfBanco.getText().equals("") || jtfIP.getText().equals("") || jtfPorta.getText().equals("") || jtfUsuario.getText().equals("") || jpfSenha.equals(null)) {
            JOptionPane.showMessageDialog(this, "Verifique os dados informados para cada campo, todos os campos são obrigatórios!");
        } else {
            this.c.setBanco(jtfBanco.getText());
            this.c.setIp(jtfIP.getText());
            this.c.setPorta(jtfPorta.getText());
            this.c.setSenha(jpfSenha.getText());
            this.c.setUsuario(jtfUsuario.getText());
        }
        return c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlIP = new javax.swing.JLabel();
        jlPorta = new javax.swing.JLabel();
        jlBanco = new javax.swing.JLabel();
        jlUsuario = new javax.swing.JLabel();
        jlSenha = new javax.swing.JLabel();
        jtfIP = new javax.swing.JTextField();
        jtfPorta = new javax.swing.JTextField();
        jtfBanco = new javax.swing.JTextField();
        jtfUsuario = new javax.swing.JTextField();
        jpfSenha = new javax.swing.JPasswordField();
        jbTestar = new javax.swing.JButton();
        jlGravar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jpImagem = new javax.swing.JPanel();
        jlImagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuração de Conexão");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jlIP.setText("IP do Servidor");

        jlPorta.setText("Porta de Conexão");

        jlBanco.setText("Nome do Banco de dados");

        jlUsuario.setText("Usuário");

        jlSenha.setText("Senha");

        jbTestar.setText("Testar");
        jbTestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTestarActionPerformed(evt);
            }
        });

        jlGravar.setText("Gravar");
        jlGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlGravarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jpImagem.setEnabled(false);

        jlImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ico/connect.png"))); // NOI18N

        javax.swing.GroupLayout jpImagemLayout = new javax.swing.GroupLayout(jpImagem);
        jpImagem.setLayout(jpImagemLayout);
        jpImagemLayout.setHorizontalGroup(
            jpImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlImagem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpImagemLayout.setVerticalGroup(
            jpImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImagemLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jlImagem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbTestar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jlIP)
                        .addComponent(jlPorta)
                        .addComponent(jlBanco)
                        .addComponent(jlUsuario)
                        .addComponent(jlSenha)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfBanco)
                                .addComponent(jtfPorta)
                                .addComponent(jtfIP)
                                .addComponent(jtfUsuario)
                                .addComponent(jpfSenha)))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbCancelar))
                    .addComponent(jpImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jlPorta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jlBanco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jlUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbTestar)
                    .addComponent(jlGravar)
                    .addComponent(jbCancelar))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-341)/2, (screenSize.height-344)/2, 341, 344);
    }// </editor-fold>//GEN-END:initComponents

    private void jbTestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTestarActionPerformed
        preencheConf();
        if (con.Testar(this.c)) {
            this.teste = 1;
        } else {
            teste = 2;
        }
    }//GEN-LAST:event_jbTestarActionPerformed

    private void jlGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlGravarActionPerformed
        preencheConf();
        if (this.teste == 1) {
            con.gravar(c);
        } else if (this.teste == 0) {
            int x = JOptionPane.showConfirmDialog(this, "Não foram realizados testes com as novas configurações! Deseja testar as configurações antes de gravar?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (x == JOptionPane.YES_OPTION) { // caso as configurações não tenham sido testas aparece uma mensagem peindo se deseja testar ou não, se sim o teste é ralizado sem as mensagens de exceções para que não fique redundante.
                try {                                                              //início do novo teste.
                    String url = "jdbc:mysql://" + c.getIp().toString() + ":" + c.getPorta().toString() + "/" + c.getBanco().toString();
                    String login = c.getUsuario().toString();
                    String senha = c.getSenha().toString();
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                    Connection conexao = DriverManager.getConnection(url, login, senha);

                    this.teste = 1;                                                    // caso a conexão tenha sido estabelecida com sucesso retorna 1

                } catch (SQLException ex) {
                    this.teste = 2;
                } catch (ClassNotFoundException ex) {
                    this.teste = 2;
                } catch (InstantiationException ex) {
                    this.teste = 2;
                } catch (IllegalAccessException ex) {
                    this.teste = 2;
                }                                                                //caso ocorram exceções retorna 2

                if (this.teste == 1) {                                           // se o teste retornar 1, avisa que deu certo e grava
                    JOptionPane.showMessageDialog(this, "Conexão realizda com sucesso, a nova configuração será gravada!");
                    con.gravar(c);
                } else {                                                        //se retornar 2 pergunta se deseja gravar mesmo nao consguindo conectar
                    int y = JOptionPane.showConfirmDialog(this, "Não foi possível estabelecer a conexão. Deseja gravar assim mesmo?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (x == JOptionPane.YES_OPTION) {
                        con.gravar(c);
                    }
                }
            } else {                                                              //caso tenha sido respondido que deseja gravar gravar sem testar ele cai aqui
                con.gravar(c);
            }
        } else {                                                                 //caso o teste valha 2 |não conseguiu conectar apos o teste| ele vem pra cá
            int x = JOptionPane.showConfirmDialog(this, "Não foi possível conectar durante o teste, deseja gravar mesmo assim?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (x == JOptionPane.YES_OPTION) {
                con.gravar(c);
            }
        }
        this.dispose();
    }//GEN-LAST:event_jlGravarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cancelar ?", "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (x == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dConexaoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dConexaoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dConexaoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dConexaoTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                dConexaoTela dialog = new dConexaoTela(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbTestar;
    private javax.swing.JLabel jlBanco;
    private javax.swing.JButton jlGravar;
    private javax.swing.JLabel jlIP;
    private javax.swing.JLabel jlImagem;
    private javax.swing.JLabel jlPorta;
    private javax.swing.JLabel jlSenha;
    private javax.swing.JLabel jlUsuario;
    private javax.swing.JPanel jpImagem;
    private javax.swing.JPasswordField jpfSenha;
    private javax.swing.JTextField jtfBanco;
    private javax.swing.JTextField jtfIP;
    private javax.swing.JTextField jtfPorta;
    private javax.swing.JTextField jtfUsuario;
    // End of variables declaration//GEN-END:variables
}
