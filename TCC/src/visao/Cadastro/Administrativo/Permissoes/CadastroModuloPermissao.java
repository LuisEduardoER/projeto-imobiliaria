/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao.Cadastro.Administrativo.Permissoes;

import Componentes.Componentes;
import controller.Mensagens;
import controller.ModuloController;
import controller.ModuloPermissaoController;
import controller.PerfilController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import modelo.Estado;
import modelo.Pais;
import modelo.PerfisPermissoes.Modulo;
import modelo.PerfisPermissoes.ModuloPermissao;
import modelo.PerfisPermissoes.Perfil;
import modelo.PerfisPermissoes.PerfilModulopermissao;
import modelo.PerfisPermissoes.Permissao;

/**
 *
 * @author Bruno
 */
public class CadastroModuloPermissao extends javax.swing.JDialog {

    /**
     * Creates new form CadastroModuloPermissao
     */
    Componentes c;
    Modulo modulo;
    Perfil perfil;
    Permissao permissao;
    ModuloPermissao moduloPermissao;
    PerfilModulopermissao perfilModulopermissao;
    
    PerfilController perfilController;
    ModuloController moduloController;
    ModuloPermissaoController moduloPermissaoController;
    JButton jbGravar;
    JButton jbExcluir;
    private Mensagens m;

    public CadastroModuloPermissao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        perfilController = new PerfilController();
        moduloController = new ModuloController();
        
        c = new Componentes();

        jbGravar = c.criaBotaoGravar();
        jbExcluir = c.criaBotaoExcluir();

        jbGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGravarActionPerformed(evt);
            }
        });

        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jcbPerfis.setModel(perfilController.listPerfis());

        jcbModulo.setModel(moduloController.listModulos());
        
        jpControles.add(jbExcluir);
        jpControles.add(jbGravar);

    }

    private void jbGravarActionPerformed(java.awt.event.ActionEvent evt) {
        acaoGravar();
    }

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {
//        m = new Mensagens();
//        if (m.jopDeletar("Deseja realmente excluir este fucionário ?") == JOptionPane.YES_OPTION) {
//            acaoRemover();
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbModulo = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jchkbGravar = new javax.swing.JCheckBox();
        jchkbAlterar = new javax.swing.JCheckBox();
        jchkbExcluir = new javax.swing.JCheckBox();
        jchckConsultar = new javax.swing.JCheckBox();
        jcbPerfis = new javax.swing.JComboBox();
        jpControles = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vinculo de Modulos Perfis e Permissões");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Perfil"));
        jPanel1.setToolTipText("");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Seção"));

        jLabel1.setText("Módulo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbModulo, 0, 294, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbModulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Permissão"));

        jchkbGravar.setText("Gravar");

        jchkbAlterar.setText("Alterar");

        jchkbExcluir.setText("Excluir");

        jchckConsultar.setText("Visualizar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchkbGravar)
                    .addComponent(jchkbAlterar))
                .addGap(71, 71, 71)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jchckConsultar)
                    .addComponent(jchkbExcluir))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jchkbGravar)
                    .addComponent(jchkbExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jchkbAlterar)
                    .addComponent(jchckConsultar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbPerfis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcbPerfis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jpControles.setLayout(new java.awt.GridLayout(1, 0, 2, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpControles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpControles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-416)/2, (screenSize.height-347)/2, 416, 347);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroModuloPermissao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroModuloPermissao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroModuloPermissao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroModuloPermissao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CadastroModuloPermissao dialog = new CadastroModuloPermissao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox jcbModulo;
    private javax.swing.JComboBox jcbPerfis;
    private javax.swing.JCheckBox jchckConsultar;
    private javax.swing.JCheckBox jchkbAlterar;
    private javax.swing.JCheckBox jchkbExcluir;
    private javax.swing.JCheckBox jchkbGravar;
    private javax.swing.JPanel jpControles;
    // End of variables declaration//GEN-END:variables

    private void acaoGravar() {
        String avisos = "";

        perfil = (Perfil) jcbPerfis.getSelectedItem();
        modulo = (Modulo) jcbModulo.getSelectedItem();
        
        if (perfil.getPerfilID() == null) {
            avisos = avisos + "\n Perfil não pode ser vazio ";
        }
        if (modulo.getModuloId() == null) {
            avisos = avisos + "\n Modulo não pode ser vazio ";
        }

        if (avisos.equals("")) {

            modulo = new Modulo();
            moduloPermissao = new ModuloPermissao();
            
            moduloPermissao.setModuloId(modulo);
            
            List<Permissao> permissoes = verificaPermissao();
            
            moduloPermissaoController = new ModuloPermissaoController();
            
            moduloPermissao = moduloPermissaoController.gravar(moduloPermissao, permissoes);

            
            
            if (modulo.getModuloId() != null) {
                m = new Mensagens();
                m.jopAviso("Modulo " + modulo.getModuloDesc() + " - ID: " + modulo.getModuloId() + " gravado com sucesso!");
            }
        } else {
            m = new Mensagens();
            m.jopAlerta("Verifique: " + avisos + "!");
            jcbPerfis.requestFocus();
        }
    }
    
    public List<Permissao> verificaPermissao(){
        List<Permissao> permissoes = new ArrayList();
        
        if(jchkbGravar.isSelected()){
            permissao = new Permissao();
            permissao.setPermissaoId(1);
            permissoes.add(permissao);
        }
        
        if(jchkbAlterar.isSelected()){
            permissao = new Permissao();
            permissao.setPermissaoId(2);
            permissoes.add(permissao);
        }
        
        if(jchckConsultar.isSelected()){
            permissao = new Permissao();
            permissao.setPermissaoId(3);
            permissoes.add(permissao);
        }
        
        if(jchkbExcluir.isSelected()){
            permissao = new Permissao();
            permissao.setPermissaoId(4);
            permissoes.add(permissao);
        }
        return permissoes;
    }
}
